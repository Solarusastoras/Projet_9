{"ast":null,"code":"import React from\"react\";import{createContext,useCallback,useContext,useEffect,useState,// Ajout de useMemo pour last\n// Add useMemo for last\nuseMemo}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";const DataContext=/*#__PURE__*/createContext({});export const api={loadData:async()=>{const json=await fetch(\"/events.json\");return json.json();}};export const DataProvider=_ref=>{let{children}=_ref;const[error,setError]=useState(null);const[data,setData]=useState(null);// Utilisation de useMemo pour afficher le dernier évènement\n// Using useMemo to display the latest event\nconst last=useMemo(()=>{// Vérifie si 'data' ou 'data.events' est nul ou indéfini\n// Checks if 'data' or 'data.events' is null or undefined\nif(!data||!data.events)return null;// Utilise la méthode 'reduce' pour trouver l'événement le plus récent\n// Uses the 'reduce' method to find the most recent event\nreturn data.events.reduce((mostRecent,event)=>// Si 'mostRecent' est nul ou si la date de l'événement actuel est plus récente que celle de 'mostRecent'\n// If 'mostRecent' is null or if the current event's date is more recent than 'mostRecent'\n!mostRecent||new Date(event.date)>new Date(mostRecent.date)?event:mostRecent,null);// Recalcule uniquement lorsque 'data' change\n// Recomputes only when 'data' changes\n},[data]);const getData=useCallback(async()=>{try{setData(await api.loadData());}catch(err){setError(err);}},[]);useEffect(()=>{if(data)return;getData();});return/*#__PURE__*/_jsx(DataContext.Provider,{// eslint-disable-next-line react/jsx-no-constructed-context-values\nvalue:{data,error,//Ajout de la valeur last\n//Add value of last\nlast},children:children});};export const useData=()=>useContext(DataContext);export default DataContext;","map":{"version":3,"names":["React","createContext","useCallback","useContext","useEffect","useState","useMemo","jsx","_jsx","DataContext","api","loadData","json","fetch","DataProvider","_ref","children","error","setError","data","setData","last","events","reduce","mostRecent","event","Date","date","getData","err","Provider","value","useData"],"sources":["C:/Users/Micyo/Desktop/Projet_9/src/contexts/DataContext/index.js"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  createContext,\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useState,\r\n  // Ajout de useMemo pour last\r\n  // Add useMemo for last\r\n  useMemo,\r\n} from \"react\";\r\n\r\nconst DataContext = createContext({});\r\n\r\nexport const api = {\r\n  loadData: async () => {\r\n    const json = await fetch(\"/events.json\");\r\n    return json.json();\r\n  },\r\n};\r\n\r\nexport const DataProvider = ({ children }) => {\r\n  const [error, setError] = useState(null);\r\n  const [data, setData] = useState(null);\r\n\r\n  // Utilisation de useMemo pour afficher le dernier évènement\r\n  // Using useMemo to display the latest event\r\n  const last = useMemo(() => {\r\n    // Vérifie si 'data' ou 'data.events' est nul ou indéfini\r\n    // Checks if 'data' or 'data.events' is null or undefined\r\n    if (!data || !data.events) return null;\r\n\r\n    // Utilise la méthode 'reduce' pour trouver l'événement le plus récent\r\n    // Uses the 'reduce' method to find the most recent event\r\n    return data.events.reduce(\r\n      (mostRecent, event) =>\r\n        // Si 'mostRecent' est nul ou si la date de l'événement actuel est plus récente que celle de 'mostRecent'\r\n        // If 'mostRecent' is null or if the current event's date is more recent than 'mostRecent'\r\n        !mostRecent || new Date(event.date) > new Date(mostRecent.date)\r\n          ? event\r\n          : mostRecent,\r\n      null\r\n    );\r\n    // Recalcule uniquement lorsque 'data' change\r\n    // Recomputes only when 'data' changes\r\n  }, [data]);\r\n\r\n  const getData = useCallback(async () => {\r\n    try {\r\n      setData(await api.loadData());\r\n    } catch (err) {\r\n      setError(err);\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n    if (data) return;\r\n    getData();\r\n  });\r\n\r\n  return (\r\n    <DataContext.Provider\r\n      // eslint-disable-next-line react/jsx-no-constructed-context-values\r\n      value={{\r\n        data,\r\n        error,\r\n        //Ajout de la valeur last\r\n        //Add value of last\r\n        last,\r\n      }}\r\n    >\r\n      {children}\r\n    </DataContext.Provider>\r\n  );\r\n};\r\n\r\nDataProvider.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport const useData = () => useContext(DataContext);\r\n\r\nexport default DataContext;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,OACEC,aAAa,CACbC,WAAW,CACXC,UAAU,CACVC,SAAS,CACTC,QAAQ,CACR;AACA;AACAC,OAAO,KACF,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEf,KAAM,CAAAC,WAAW,cAAGR,aAAa,CAAC,CAAC,CAAC,CAAC,CAErC,MAAO,MAAM,CAAAS,GAAG,CAAG,CACjBC,QAAQ,CAAE,KAAAA,CAAA,GAAY,CACpB,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAC,KAAK,CAAC,cAAc,CAAC,CACxC,MAAO,CAAAD,IAAI,CAACA,IAAI,CAAC,CAAC,CACpB,CACF,CAAC,CAED,MAAO,MAAM,CAAAE,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,KAAK,CAAEC,QAAQ,CAAC,CAAGb,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAACc,IAAI,CAAEC,OAAO,CAAC,CAAGf,QAAQ,CAAC,IAAI,CAAC,CAEtC;AACA;AACA,KAAM,CAAAgB,IAAI,CAAGf,OAAO,CAAC,IAAM,CACzB;AACA;AACA,GAAI,CAACa,IAAI,EAAI,CAACA,IAAI,CAACG,MAAM,CAAE,MAAO,KAAI,CAEtC;AACA;AACA,MAAO,CAAAH,IAAI,CAACG,MAAM,CAACC,MAAM,CACvB,CAACC,UAAU,CAAEC,KAAK,GAChB;AACA;AACA,CAACD,UAAU,EAAI,GAAI,CAAAE,IAAI,CAACD,KAAK,CAACE,IAAI,CAAC,CAAG,GAAI,CAAAD,IAAI,CAACF,UAAU,CAACG,IAAI,CAAC,CAC3DF,KAAK,CACLD,UAAU,CAChB,IACF,CAAC,CACD;AACA;AACF,CAAC,CAAE,CAACL,IAAI,CAAC,CAAC,CAEV,KAAM,CAAAS,OAAO,CAAG1B,WAAW,CAAC,SAAY,CACtC,GAAI,CACFkB,OAAO,CAAC,KAAM,CAAAV,GAAG,CAACC,QAAQ,CAAC,CAAC,CAAC,CAC/B,CAAE,MAAOkB,GAAG,CAAE,CACZX,QAAQ,CAACW,GAAG,CAAC,CACf,CACF,CAAC,CAAE,EAAE,CAAC,CACNzB,SAAS,CAAC,IAAM,CACd,GAAIe,IAAI,CAAE,OACVS,OAAO,CAAC,CAAC,CACX,CAAC,CAAC,CAEF,mBACEpB,IAAA,CAACC,WAAW,CAACqB,QAAQ,EACnB;AACAC,KAAK,CAAE,CACLZ,IAAI,CACJF,KAAK,CACL;AACA;AACAI,IACF,CAAE,CAAAL,QAAA,CAEDA,QAAQ,CACW,CAAC,CAE3B,CAAC,CAMD,MAAO,MAAM,CAAAgB,OAAO,CAAGA,CAAA,GAAM7B,UAAU,CAACM,WAAW,CAAC,CAEpD,cAAe,CAAAA,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module"}