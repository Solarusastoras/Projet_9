{"ast":null,"code":"import React,{useState}from\"react\";import EventCard from\"../../components/EventCard\";import Select from\"../../components/Select\";import{useData}from\"../../contexts/DataContext\";import Modal from\"../Modal\";import ModalEvent from\"../ModalEvent\";import\"./style.css\";// Nombre d'événements par page\n// Number of events per page\nimport{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const PER_PAGE=9;const EventList=()=>{const{data,error}=useData();const[type,setType]=useState();const[currentPage,setCurrentPage]=useState(1);console.log(\"--------------\");console.log(\"DataEvents:\",data);console.log(\"--------------\");// Modification de code\n// Filtre les événements par type\n// Filter events by type\nconst filteredEvents=(!type?data===null||data===void 0?void 0:data.events:data===null||data===void 0?void 0:data.events.filter(event=>!type||event.type===type))||[];// Calculer le nombre total d'événements filtrés\n// Calculate the total number of filtered events\nconst totalEvents=filteredEvents.length;// Modification de code\n// Calculer le nombre de pages nécessaires plus précis \n// Calculate the number of pages needed more accurately\nconst pageNumber=Math.ceil(totalEvents/PER_PAGE);// Filtrer les événements pour la page actuelle\n// Filter events for the current page\nconst paginatedEvents=filteredEvents.slice((currentPage-1)*PER_PAGE,currentPage*PER_PAGE);console.log(\"--------------\");console.log(\"filtre:\",paginatedEvents);console.log(\"--------------\");// Change le type d'événement sélectionné et réinitialise la page à 1\n// Change the selected event type and reset the page to 1\nconst changeType=evtType=>{setCurrentPage(1);setType(evtType);};// Créer une liste des types d'événements\n// Create a list of event types\nconst typeList=new Set(data===null||data===void 0?void 0:data.events.map(event=>event.type));return/*#__PURE__*/_jsxs(_Fragment,{children:[error&&/*#__PURE__*/_jsx(\"div\",{children:\"An error occured\"}),data===null?\"loading\":/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"SelectTitle\",children:\"Cat\\xE9gories\"}),/*#__PURE__*/_jsx(Select// Passer la liste des types d'événements au composant Select\n// Pass the list of event types to the Select component\n,{selection:Array.from(typeList),onChange:value=>value?changeType(value):changeType(null)}),/*#__PURE__*/_jsx(\"div\",{id:\"events\",className:\"ListContainer\",\"data-testid\":\"eventList\",children:paginatedEvents.map(event=>/*#__PURE__*/_jsx(Modal,{Content:/*#__PURE__*/_jsx(ModalEvent,{event:event}),children:_ref=>{let{setIsOpened}=_ref;return/*#__PURE__*/_jsx(EventCard,{onClick:()=>setIsOpened(true),imageSrc:event.cover,title:event.title,date:new Date(event.date),label:event.type});}},event.id))}),/*#__PURE__*/_jsx(\"div\",{className:\"Pagination\",children:[...Array(pageNumber)].map((_,n)=>/*#__PURE__*///eslint-disable-next-line react/no-array-index-key\n_jsx(\"a\",{href:\"#events\",onClick:()=>setCurrentPage(n+1),children:n+1},n))})]})]});};export default EventList;","map":{"version":3,"names":["React","useState","EventCard","Select","useData","Modal","ModalEvent","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","PER_PAGE","EventList","data","error","type","setType","currentPage","setCurrentPage","console","log","filteredEvents","events","filter","event","totalEvents","length","pageNumber","Math","ceil","paginatedEvents","slice","changeType","evtType","typeList","Set","map","children","className","selection","Array","from","onChange","value","id","Content","_ref","setIsOpened","onClick","imageSrc","cover","title","date","Date","label","_","n","href"],"sources":["C:/Users/Micyo/Desktop/Projet_9/src/containers/Events/index.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport EventCard from \"../../components/EventCard\";\r\nimport Select from \"../../components/Select\";\r\nimport { useData } from \"../../contexts/DataContext\";\r\nimport Modal from \"../Modal\";\r\nimport ModalEvent from \"../ModalEvent\";\r\n\r\nimport \"./style.css\";\r\n\r\n// Nombre d'événements par page\r\n// Number of events per page\r\nconst PER_PAGE = 9;\r\n\r\nconst EventList = () => {\r\n  const { data, error } = useData();\r\n  const [type, setType] = useState();\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  console.log(\"--------------\");\r\n  console.log(\"DataEvents:\", data);\r\n  console.log(\"--------------\");\r\n\r\n  // Modification de code\r\n  // Filtre les événements par type\r\n  // Filter events by type\r\n  const filteredEvents = (!type\r\n    ? data?.events\r\n    : data?.events.filter((event) => !type || event.type === type)) || [];\r\n\r\n  // Calculer le nombre total d'événements filtrés\r\n  // Calculate the total number of filtered events\r\n  const totalEvents = filteredEvents.length;\r\n\r\n  // Modification de code\r\n  // Calculer le nombre de pages nécessaires plus précis \r\n  // Calculate the number of pages needed more accurately\r\n  const pageNumber = Math.ceil(totalEvents / PER_PAGE);\r\n\r\n  // Filtrer les événements pour la page actuelle\r\n  // Filter events for the current page\r\n  const paginatedEvents = filteredEvents.slice(\r\n    (currentPage - 1) * PER_PAGE,\r\n    currentPage * PER_PAGE\r\n  );\r\n\r\n  console.log(\"--------------\");\r\n  console.log(\"filtre:\", paginatedEvents);\r\n  console.log(\"--------------\");\r\n\r\n  // Change le type d'événement sélectionné et réinitialise la page à 1\r\n  // Change the selected event type and reset the page to 1\r\n  const changeType = (evtType) => {\r\n    setCurrentPage(1);\r\n    setType(evtType);\r\n  };\r\n\r\n  // Créer une liste des types d'événements\r\n  // Create a list of event types\r\n  const typeList = new Set(data?.events.map((event) => event.type));\r\n  \r\n\r\n  return (\r\n    <>\r\n      {/* Afficher un message d'erreur si une erreur survient\r\n      // Display an error message if an error occurs */}\r\n      {error && <div>An error occured</div>}\r\n      {data === null ? (\r\n        \"loading\"\r\n      ) : (\r\n        <>\r\n          <h3 className=\"SelectTitle\">Catégories</h3>\r\n          <Select\r\n            // Passer la liste des types d'événements au composant Select\r\n            // Pass the list of event types to the Select component\r\n            selection={Array.from(typeList)}\r\n            onChange={(value) => (value ? changeType(value) : changeType(null))}\r\n          />\r\n          <div id=\"events\" className=\"ListContainer\" data-testid=\"eventList\">\r\n            {paginatedEvents.map((event) => (\r\n              <Modal key={event.id} Content={<ModalEvent event={event} />}>\r\n                {({ setIsOpened }) => (\r\n                  <EventCard\r\n                    onClick={() => setIsOpened(true)}\r\n                    imageSrc={event.cover}\r\n                    title={event.title}\r\n                    date={new Date(event.date)}\r\n                    label={event.type}\r\n                  />\r\n                )}\r\n              </Modal>\r\n            ))}\r\n          </div>\r\n          <div className=\"Pagination\">\r\n            {[...Array(pageNumber)].map((_, n) => (\r\n              //eslint-disable-next-line react/no-array-index-key\r\n              <a key={n} href=\"#events\" onClick={() => setCurrentPage(n + 1)}>\r\n                {/* Afficher les numéros de page et permettre à l'utilisateur de naviguer entre les pages\r\n                // Display page numbers and allow the user to navigate between pages */}\r\n                {n + 1}\r\n              </a>\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EventList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}